#include "Common.tshader"

float4 samplesWeights[(NUM_SAMPLES + 3) / 4];

Texture2D filterTex;
SamplerState filterSampler;

void FilterPS(
  float4 posH : SV_POSITION,
  float4 uvs[(NUM_SAMPLES + 1) / 2] : UVS,
  out float4 outColor : SV_TARGET)
{
  outColor = 0.0f;
  
  float weights[(NUM_SAMPLES + 3) / 4 * 4] = (float[(NUM_SAMPLES + 3) / 4 * 4]) samplesWeights;
  
  float2 uvsCast[(NUM_SAMPLES + 1) / 2 * 2] = (float2[(NUM_SAMPLES + 1) / 2 * 2]) uvs;
  
  [unroll] for(uint i = 0; i < NUM_SAMPLES; ++i)
  {
    outColor += filterTex.SampleLevel(filterSampler, uvsCast[i], 0) * weights[i];
  }
}