SET(LIB_NAME ${TOYGE_CORE_LIB_NAME})
ADD_DEFINITIONS(-DTOYGE_CORE_SOURCE)

#Input
FILE(GLOB INPUT_HEADER_FILES ${TOYGE_ROOT_DIR}/Core/include/ToyGE/Input/*.h)
FILE(GLOB INPUT_SOURCE_FILES ${TOYGE_ROOT_DIR}/Core/src/Input/*.cpp)

SOURCE_GROUP("Input\\Header Files" FILES ${INPUT_HEADER_FILES})
SOURCE_GROUP("Input\\Source Files" FILES ${INPUT_SOURCE_FILES})


#Input/Windows
FILE(GLOB INPUT_WINDOWS_HEADER_FILES ${TOYGE_ROOT_DIR}/Core/include/ToyGE/Input/Windows/*.h)
FILE(GLOB INPUT_WINDOWS_SOURCE_FILES ${TOYGE_ROOT_DIR}/Core/src/Input/Windows/*.cpp)

SOURCE_GROUP("Input\\Windows\\Header Files" FILES ${INPUT_WINDOWS_HEADER_FILES})
SOURCE_GROUP("Input\\Windows\\Source Files" FILES ${INPUT_WINDOWS_SOURCE_FILES})


#Kernel
FILE(GLOB KERNEL_HEADER_FILES ${TOYGE_ROOT_DIR}/Core/include/ToyGE/Kernel/*.h)
FILE(GLOB KERNEL_SOURCE_FILES ${TOYGE_ROOT_DIR}/Core/src/Kernel/*.cpp)

SET(KERNEL_HEADER_FILES ${KERNEL_HEADER_FILES} ${TOYGE_ROOT_DIR}/Core/include/ToyGE/ToyGE.h)

SOURCE_GROUP("Kernel\\Header Files" FILES ${KERNEL_HEADER_FILES})
SOURCE_GROUP("Kernel\\Source Files" FILES ${KERNEL_SOURCE_FILES})


#Math
FILE(GLOB MATH_HEADER_FILES ${TOYGE_ROOT_DIR}/Core/include/ToyGE/Math/*.h)
FILE(GLOB MATH_SOURCE_FILES ${TOYGE_ROOT_DIR}/Core/src/Math/*.cpp)

SOURCE_GROUP("Math\\Header Files" FILES ${MATH_HEADER_FILES})
SOURCE_GROUP("Math\\Source Files" FILES ${MATH_SOURCE_FILES})


#Platform
FILE(GLOB PLATFORM_HEADER_FILES ${TOYGE_ROOT_DIR}/Core/include/ToyGE/Platform/*.h)
FILE(GLOB PLATFORM_SOURCE_FILES ${TOYGE_ROOT_DIR}/Core/src/Platform/*.cpp)

SOURCE_GROUP("Platform\\Header Files" FILES ${PLATFORM_HEADER_FILES})
SOURCE_GROUP("Platform\\Source Files" FILES ${PLATFORM_SOURCE_FILES})


#Platform/Windows
FILE(GLOB PLATFORM_WINDOWS_HEADER_FILES ${TOYGE_ROOT_DIR}/Core/include/ToyGE/Platform/Windows/*.h)
FILE(GLOB PLATFORM_WINDOWS_SOURCE_FILES ${TOYGE_ROOT_DIR}/Core/src/Platform/Windows/*.cpp)

SOURCE_GROUP("Platform\\Windows\\Header Files" FILES ${PLATFORM_WINDOWS_HEADER_FILES})
SOURCE_GROUP("Platform\\Windows\\Source Files" FILES ${PLATFORM_WINDOWS_SOURCE_FILES})


#RenderEngine
FILE(GLOB RENDERENGINE_HEADER_FILES ${TOYGE_ROOT_DIR}/Core/include/ToyGE/RenderEngine/*.h)
FILE(GLOB RENDERENGINE_SOURCE_FILES ${TOYGE_ROOT_DIR}/Core/src/RenderEngine/*.cpp)

SOURCE_GROUP("RenderEngine\\Header Files" FILES ${RENDERENGINE_HEADER_FILES})
SOURCE_GROUP("RenderEngine\\Source Files" FILES ${RENDERENGINE_SOURCE_FILES})


#RenderEngine/Shaders
FILE(GLOB RENDERENGINE_SHADER_FILES ${TOYGE_ROOT_DIR}/Media/Effects/*.xml)
SOURCE_GROUP("RenderEngine\\Shaders" FILES ${RENDERENGINE_SHADER_FILES})


#RenderEngine/Effects
FILE(GLOB RENDERENGINE_EFFECTS_HEADER_FILES ${TOYGE_ROOT_DIR}/Core/include/ToyGE/RenderEngine/Effects/*.h)
FILE(GLOB RENDERENGINE_EFFECTS_SOURCE_FILES ${TOYGE_ROOT_DIR}/Core/src/RenderEngine/Effects/*.cpp)

SOURCE_GROUP("RenderEngine\\Effects\\Header Files" FILES ${RENDERENGINE_EFFECTS_HEADER_FILES})
SOURCE_GROUP("RenderEngine\\Effects\\Source Files" FILES ${RENDERENGINE_EFFECTS_SOURCE_FILES})

#RenderEngine/Font
FILE(GLOB RENDERENGINE_FONT_HEADER_FILES "${TOYGE_ROOT_DIR}/Core/include/ToyGE/RenderEngine/Font/*.h")
FILE(GLOB RENDERENGINE_FONT_SOURCE_FILES ${TOYGE_ROOT_DIR}/Core/src/RenderEngine/Font/*.cpp)

SOURCE_GROUP("RenderEngine\\Font\\Header Files" FILES ${RENDERENGINE_FONT_HEADER_FILES})
SOURCE_GROUP("RenderEngine\\Font\\Source Files" FILES ${RENDERENGINE_FONT_SOURCE_FILES})


#Inlcude
INCLUDE_DIRECTORIES(${TOYGE_ROOT_DIR}/Core/include)
INCLUDE_DIRECTORIES(${ANTTWEAKBAR_DIR}/include)
INCLUDE_DIRECTORIES(${ASSIMP_DIR}/include)
INCLUDE_DIRECTORIES(${BOOST_DIR}/)
INCLUDE_DIRECTORIES(${FREEIMAGE_DIR}/lib/${PLATFORM_TARGET})
INCLUDE_DIRECTORIES(${FREETYPE_DIR}/include)
INCLUDE_DIRECTORIES(${RAPIDXML_DIR}/)

#Libs
LINK_DIRECTORIES(${ANTTWEAKBAR_DIR}/lib/)
LINK_DIRECTORIES(${ASSIMP_DIR}/lib/${PLATFORM_TARGET}/)
LINK_DIRECTORIES(${FREEIMAGE_DIR}/lib/${PLATFORM_TARGET}/)
LINK_DIRECTORIES(${FREETYPE_DIR}/lib/${PLATFORM_TARGET}/)

IF(TARGET_64)
	SET(LINKED_LIBARARIES ${LINKED_LIBARARIES} AntTweakBar64)
ELSE()
	SET(LINKED_LIBARARIES ${LINKED_LIBARARIES} AntTweakBar)
ENDIF()

SET(LINKED_LIBARARIES ${LINKED_LIBARARIES} 
	debug assimpd
	optimized assimp )

SET(LINKED_LIBARARIES ${LINKED_LIBARARIES} 
	FreeImage )

SET(LINKED_LIBARARIES ${LINKED_LIBARARIES} 
	debug freetype
	optimized freetype )

IF(WIN32)
	SET(LINKED_LIBARARIES ${LINKED_LIBARARIES} 
		Shlwapi)
ENDIF()

#GenerateLib
ADD_LIBRARY(${LIB_NAME} SHARED
	${INPUT_HEADER_FILES} ${INPUT_SOURCE_FILES}
	${INPUT_WINDOWS_HEADER_FILES} ${INPUT_WINDOWS_SOURCE_FILES}
	${KERNEL_HEADER_FILES} ${KERNEL_SOURCE_FILES}
	${MATH_HEADER_FILES} ${MATH_SOURCE_FILES}
	${PLATFORM_HEADER_FILES} ${PLATFORM_SOURCE_FILES}
	${PLATFORM_WINDOWS_HEADER_FILES} ${PLATFORM_WINDOWS_SOURCE_FILES}
	${RENDERENGINE_HEADER_FILES} ${RENDERENGINE_SOURCE_FILES}
	${RENDERENGINE_EFFECTS_HEADER_FILES} ${RENDERENGINE_EFFECTS_SOURCE_FILES}
	${RENDERENGINE_FONT_HEADER_FILES} ${RENDERENGINE_FONT_SOURCE_FILES}
	${RENDERENGINE_SHADER_FILES})


TARGET_LINK_LIBRARIES(${LIB_NAME} PRIVATE ${LINKED_LIBARARIES})


#Properties
SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
	PROJECT_LABEL ${LIB_NAME})

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
	FOLDER "Core")

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY ${TOYGE_LIB_DIR}/${PLATFORM_TARGET}/
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${TOYGE_LIB_DIR}/${PLATFORM_TARGET}/Debug/
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${TOYGE_LIB_DIR}/${PLATFORM_TARGET}/Release/
	OUTPUT_NAME ${LIB_NAME})

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
	RUNTIME_OUTPUT_DIRECTORY ${TOYGE_LIB_DIR}/${PLATFORM_TARGET}/
	RUNTIME_OUTPUT_DIRECTORY_DEBUG ${TOYGE_LIB_DIR}/${PLATFORM_TARGET}/Debug/
	RUNTIME_OUTPUT_DIRECTORY_RELEASE ${TOYGE_LIB_DIR}/${PLATFORM_TARGET}/Release/
	OUTPUT_NAME ${LIB_NAME})

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
	LIBRARY_OUTPUT_DIRECTORY ${TOYGE_LIB_DIR}/${PLATFORM_TARGET}/
	LIBRARY_OUTPUT_DIRECTORY_DEBUG ${TOYGE_LIB_DIR}/${PLATFORM_TARGET}/Debug/
	LIBRARY_OUTPUT_DIRECTORY_RELEASE ${TOYGE_LIB_DIR}/${PLATFORM_TARGET}/Release/
	OUTPUT_NAME ${LIB_NAME})

ADD_CUSTOM_COMMAND(TARGET ${LIB_NAME} 
	POST_BUILD
	COMMAND ${CMAKE_COMMAND} -E make_directory ${TOYGE_BIN_DIR}/${PLATFORM_TARGET}/${BUILD_CONFIG}/ 
	COMMAND ${CMAKE_COMMAND} -E copy 
	${TOYGE_LIB_DIR}/${PLATFORM_TARGET}/${BUILD_CONFIG}/${LIB_NAME}${DLL_SUFFIX}
	${TOYGE_BIN_DIR}/${PLATFORM_TARGET}/${BUILD_CONFIG}/${LIB_NAME}${DLL_SUFFIX}
	)




