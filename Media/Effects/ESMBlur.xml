<?xml version='1.0'?>

<effect>
  <include name='PostProcess.xml'/>
  <include name='CommonState.xml'/>
  <include name="BlurConfig.xml"/>
  
  <variable type='Texture2D' format='float' name='inTex'/>

  <variable type='cbuffer' name='cb_blur'>
    <variable type='int4' name='blurRadius'/>
  </variable>
  
  <variable type='SamplerState' name='samPoint'>
    <state name='filter' value='MIN_MAG_MIP_POINT'/>
    <state name='addressU' value='CLAMP'/>
    <state name='addressV' value='CLAMP'/>
  </variable>
  
  <shader>
    <![CDATA[

float ESMBlurPS(PostProcessVsOut vsOut) : SV_TARGET
{
  float texelSize = 1.0f / inTex.Length.x;
  
  float weights[MAX_BLUR_RADIUS + 1] = (float[MAX_BLUR_RADIUS + 1])gaussTable;
  
  float2 t0 = (vsOut.pos.xy - BLUR_RADIUS * AXIS) * texelSize;
  float d0 = inTex.SampleLevel(samPoint, t0, 0);
  float w0 = weights[BLUR_RADIUS];
  
  float sum = 0.0f;
  [unroll] for(int i = -BLUR_RADIUS + 1; i <= BLUR_RADIUS; ++i)
  {
    float2 ti = (vsOut.pos.xy - i * AXIS) * texelSize;
    float di = inTex.SampleLevel(samPoint, ti, 0);
    sum += weights[abs(i)] * exp((di - d0));
  }
  sum = log(w0 + sum);
  sum += d0;
  
  return sum;
}

    ]]>
  </shader>
  
  <technique name='ESMBlurX'>
    <pass>
      <state value='disableDepth'/>
      <macro name='AXIS' value='float2(1.0, 0.0)'/>
      <vs entry='PostProcessVS'/>
      <ps entry='ESMBlurPS'/>
    </pass>
  </technique>

  <technique name='ESMBlurY'>
    <pass>
      <state value='disableDepth'/>
      <macro name='AXIS' value='float2(0.0, 1.0)'/>
      <vs entry='PostProcessVS'/>
      <ps entry='ESMBlurPS'/>
    </pass>
  </technique>

</effect>