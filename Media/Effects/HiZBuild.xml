<?xml version="1.0" encoding="utf-8"?>

<effect>
  <include name="PostProcess.xml"/>
  <include name="CommonState.xml"/>

  <variable type="Texture2D" name="g_hizTex"/>

  <variable type="cbuffer" name="cb_hiz">
    <variable type="uint4" name="mipLevel"/>
  </variable>

  <shader>
    <![CDATA[
    
float BuildHiZInitalPS(PostProcessVSOut vsOut) : SV_TARGET
{
  uint2 texelIndex = (uint2)vsOut.pos.xy;
  
  float z0 = g_hizTex.Load(uint3(texelIndex, 0)).x;
  
  return z0;
}
    
float BuildHiZPS(PostProcessVSOut vsOut) : SV_TARGET
{
  uint2 texelIndex = (uint2)vsOut.pos.xy;
  uint2 subTexelOffset = texelIndex * 2;
  
  float z0 = g_hizTex.Load(uint3(subTexelOffset + uint2(0, 0), mipLevel.x - 1)).x;
  float z1 = g_hizTex.Load(uint3(subTexelOffset + uint2(1, 0), mipLevel.x - 1)).x;
  float z2 = g_hizTex.Load(uint3(subTexelOffset + uint2(0, 1), mipLevel.x - 1)).x;
  float z3 = g_hizTex.Load(uint3(subTexelOffset + uint2(1, 1), mipLevel.x - 1)).x;
  
  float minZ = min(min(min(z0, z1), z2), z3);
  
  return minZ;
}
    
    ]]>
  </shader>

  <technique name="BuildHiZInital">
    <pass>
      <state value="disableDepth"/>
      <vs entry="PostProcessVS"/>
      <ps entry="BuildHiZInitalPS"/>
    </pass>
  </technique>

  <technique name="BuildHiZ">
    <pass>
      <state value="disableDepth"/>
      <vs entry="PostProcessVS"/>
      <ps entry="BuildHiZPS"/>
    </pass>
  </technique>
  
</effect>