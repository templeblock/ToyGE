<?xml version="1.0" encoding="utf-8"?>

<effect>
  <include name="PostProcess.xml"/>
  <include name="VSMUtil.xml"/>
  <include name="CommonState.xml"/>

  <variable type="Texture2D" name="inTex"/>

  <shader>
    <![CDATA[
    
void VSMConvertPS(
  PostProcessVSOut vsOut,
  out float2 outColor : SV_TARGET
  )
{
  float z = inTex.Load(int3(vsOut.pos.xy, 0)).x;
	outColor = float2(z, z * z);
}
    
    ]]>
  </shader>

  <technique name='VSMConvert'>
    <pass>
      <state value='disableDepth'/>
      <vs entry='PostProcessVS'/>
      <ps entry='VSMConvertPS'/>
    </pass>
  </technique>
  

  <shader>
  <![CDATA[
  
void EVSMConvertPS(
  PostProcessVSOut vsOut,
  #ifdef EVSM_2
  out float2 outColor : SV_TARGET
  #else
  out float4 outColor : SV_TARGET
  #endif
  )
{
  float z = inTex.Load(int3(vsOut.pos.xy, 0)).x;
#ifdef EVSM_2
  float zWarp = WarpDepth2(z);
	outColor = float2(zWarp.x, zWarp.x * zWarp.x);
#else
  float2 zWarp = WarpDepth4(z);
	outColor = float4(zWarp.x, zWarp.x * zWarp.x, zWarp.y, zWarp.y * zWarp.y);
#endif
}
  
  ]]>
  </shader>

  <technique name='EVSMConvert'>
    <pass>
      <state value='disableDepth'/>
      <vs entry='PostProcessVS'/>
      <ps entry='EVSMConvertPS'/>
    </pass>
  </technique>

  <!--<technique name='EVSMConvert4'>
    <pass>
      <state value='disableDepth'/>
      <vs entry='PostProcessVS'/>
      <ps entry='EVSMConvertPS'/>
    </pass>
  </technique>-->
  
</effect>
