<?xml version="1.0" encoding="utf-8"?>

<effect>
  <include name="PostProcess.xml"/>
  <include name="CommonState.xml"/>
  
  <variable type="Texture2D" name="srcTex"/>
  
  <shader>
    <![CDATA[
    
float2 FFTSetupPS(PostProcessVSOut vsOut) : SV_TARGET
{
    return float2( srcTex.SampleLevel(samplerPoint, vsOut.tex, 0).x, 0.0f );
}
    
    ]]>
  </shader>

  <technique name="FFTSetup">
    <pass>
      <state value="disableDepth"/>
      <vs entry="PostProcessVS"/>
      <ps entry="FFTSetupPS"/>
    </pass>
  </technique>


  <variable type="cbuffer" name="cb_ifftScale">
    <variable type="float" name="ifftScale"/>
  </variable>
  
  <shader>
    <![CDATA[
    
float2 IFFTScalePS(PostProcessVSOut vsOut) : SV_TARGET
{
    return srcTex.SampleLevel(samplerPoint, vsOut.tex, 0).xy * ifftScale;
}
    
    ]]>
  </shader>

  <technique name="IFFTScale">
    <pass>
      <state value="disableDepth"/>
      <vs entry="PostProcessVS"/>
      <ps entry="IFFTScalePS"/>
    </pass>
  </technique>

  <shader>
    <![CDATA[
    
float2 IFFTConjugatePS(PostProcessVSOut vsOut) : SV_TARGET
{
    return srcTex.SampleLevel(samplerPoint, vsOut.tex, 0).xy * float2(1.0f, -1.0f);
}
    
    ]]>
  </shader>

  <technique name="IFFTConjugate">
    <pass>
      <state value="disableDepth"/>
      <vs entry="PostProcessVS"/>
      <ps entry="IFFTConjugatePS"/>
    </pass>
  </technique>

  
  <shader>
    <![CDATA[
    
float4 ShowFFTPS(PostProcessVSOut vsOut) : SV_TARGET
{
    float2 fft = srcTex.SampleLevel(samplerPoint, vsOut.tex, 0).xy;
    return sqrt(dot(fft, fft)) / 1e2;
}
    
    ]]>
  </shader>

  <technique name="ShowFFT">
    <pass>
      <state value="disableDepth"/>
      <vs entry="PostProcessVS"/>
      <ps entry="ShowFFTPS"/>
    </pass>
  </technique>
  
</effect>
